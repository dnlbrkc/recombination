a=str_split(x1,"")
b=str_split(x2,"")
dist_best <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- participantPrev$Pattern[1]
a=str_split(x1,"")
b=str_split(x2,"")
dist_own <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
if(dist_own < dist_best ){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else {
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination???")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
}
} else if ( all(unique(actions) %in% c("COPY","SHOW","ITEMCHANGE")==TRUE) && length(unique(actions))==3){
others <- participantOld$SelectedPlayer
others <- others[!is.na(others)]
sols <- strategies %>%
filter(Player %in% others & Round == p-1) %>%
group_by(Player) %>% slice(1)
last <- sols$Pattern[length(sols$Pattern)]
sols$FitnessScore <- as.numeric(str_replace(sols$FitnessScore, ",", "."))
best <- sols[which.max(as.numeric(sols$FitnessScore)),]$Pattern
#distance from last persn
x1 <- participantOld$Pattern[1]
x2 <- last
a=str_split(x1,"")
b=str_split(x2,"")
dist_last <-(sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- best
a=str_split(x1,"")
b=str_split(x2,"")
dist_best <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- participantPrev$Pattern[1]
a=str_split(x1,"")
b=str_split(x2,"")
dist_own <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
if(dist_own < dist_best){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else {
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination???")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
}
} else if (all(unique(actions) %in% c("SHOW", "COPY") == TRUE) && length(unique(actions))>1){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("copy")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else if (all(actions == "SHOW")){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("individual/exploit")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else if (all(actions == "COPY") && length(unique(actions))==1){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("individual/exploit")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else{
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("unknown")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
}
}
}
colnames(strat) <- c("ID","TRIAL","STRATEGY","PAYOFF","ACTION")
write.csv(strat,file="~/Desktop/res/NEW_1.csv")
strategies <- data %>%  select(Player,Round,Pattern,Action, ActionValue,SelectedPlayer,FitnessScore)
strategies$Action[strategies$Action == ""]  <- "NULL"
strategies$ActionValue[strategies$ActionValue == ""]  <- "NULL"
k=0
#recombinators <- matrix(0,ncol=7,nrow=9*9)
#r <- 3:6
strat <- matrix(0,ncol=5,nrow=9*34)
for(i in 1:9){ #player
for(p in 2:35){ #round
k=k+1
#select participant and round
participantOld <- strategies %>% filter(Player==i & Round == p)
participantOld <- participantOld[-1,]
participantOld <- participantOld[-nrow(participantOld),]
participantPrev <- strategies %>% filter(Player==i & Round == p-1)
if( (p>1) && nrow(participantOld )> 1 ){
participantOld <- participantOld[-1,]
}
actions <- participantOld$Action
if(all(actions == "ITEMCHANGE")){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("individual/explore")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else if (all(unique(actions) == c("SHOW", "ITEMCHANGE"))==TRUE && length(unique(actions))>1 ){
others <- participantOld$SelectedPlayer
others <- others[!is.na(others)]
sols <- strategies %>%
filter(Player %in% others & Round == p-1) %>%
group_by(Player) %>% slice(1)
last <- sols$Pattern[length(sols$Pattern)]
sols$FitnessScore <- as.numeric(str_replace(sols$FitnessScore, ",", "."))
best <- sols[which.max(as.numeric(sols$FitnessScore)),]$Pattern
#distance from last persn
x1 <- participantOld$Pattern[1]
x2 <- last
a=str_split(x1,"")
b=str_split(x2,"")
dist_last <-(sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- best
a=str_split(x1,"")
b=str_split(x2,"")
dist_best <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- participantPrev$Pattern[1]
a=str_split(x1,"")
b=str_split(x2,"")
dist_own <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
if(dist_own < dist_best ){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else {
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination???")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
}
} else if ( all(unique(actions) %in% c("COPY","SHOW","ITEMCHANGE")==TRUE) && length(unique(actions))==3){
others <- participantOld$SelectedPlayer
others <- others[!is.na(others)]
sols <- strategies %>%
filter(Player %in% others & Round == p-1) %>%
group_by(Player) %>% slice(1)
last <- sols$Pattern[length(sols$Pattern)]
sols$FitnessScore <- as.numeric(str_replace(sols$FitnessScore, ",", "."))
best <- sols[which.max(as.numeric(sols$FitnessScore)),]$Pattern
#distance from last persn
x1 <- participantOld$Pattern[1]
x2 <- last
a=str_split(x1,"")
b=str_split(x2,"")
dist_last <-(sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- best
a=str_split(x1,"")
b=str_split(x2,"")
dist_best <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- participantPrev$Pattern[1]
a=str_split(x1,"")
b=str_split(x2,"")
dist_own <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
if(dist_own < dist_best){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else {
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination???")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
}
} else if (all(unique(actions) %in% c("SHOW", "COPY") == TRUE) && length(unique(actions))>1){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("copy")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else if (all(actions == "SHOW")){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("individual/exploit")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else if (all(actions == "COPY") && length(unique(actions))==1){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("individual/exploit")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else{
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("unknown")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
}
}
}
colnames(strat) <- c("ID","TRIAL","STRATEGY","PAYOFF","ACTION")
write.csv(strat,file="~/Desktop/res/NEW_1.csv")
data <- read.csv("~/Desktop/exp_WAGNER1.csv",row.names=NULL,sep=';',
colClasses= c("character",
"numeric",
"character",
"character",
"character",
"character",
"numeric",
"character",
"character",
"character",
"numeric",
"character",
"character",
"character",
"character",
"numeric",
"numeric",
"numeric",
"character"))
data <- data %>% dplyr::filter(SessionGroup ==2)
strategies <- data %>%  select(Player,Round,Pattern,Action, ActionValue,SelectedPlayer,FitnessScore)
strategies$Action[strategies$Action == ""]  <- "NULL"
strategies$ActionValue[strategies$ActionValue == ""]  <- "NULL"
k=0
#recombinators <- matrix(0,ncol=7,nrow=9*9)
#r <- 3:6
strat <- matrix(0,ncol=5,nrow=9*34)
for(i in 1:9){ #player
for(p in 2:35){ #round
k=k+1
#select participant and round
participantOld <- strategies %>% filter(Player==i & Round == p)
participantOld <- participantOld[-1,]
participantOld <- participantOld[-nrow(participantOld),]
participantPrev <- strategies %>% filter(Player==i & Round == p-1)
if( (p>1) && nrow(participantOld )> 1 ){
participantOld <- participantOld[-1,]
}
actions <- participantOld$Action
if(all(actions == "ITEMCHANGE")){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("individual/explore")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else if (all(unique(actions) == c("SHOW", "ITEMCHANGE"))==TRUE && length(unique(actions))>1 ){
others <- participantOld$SelectedPlayer
others <- others[!is.na(others)]
sols <- strategies %>%
filter(Player %in% others & Round == p-1) %>%
group_by(Player) %>% slice(1)
last <- sols$Pattern[length(sols$Pattern)]
sols$FitnessScore <- as.numeric(str_replace(sols$FitnessScore, ",", "."))
best <- sols[which.max(as.numeric(sols$FitnessScore)),]$Pattern
#distance from last persn
x1 <- participantOld$Pattern[1]
x2 <- last
a=str_split(x1,"")
b=str_split(x2,"")
dist_last <-(sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- best
a=str_split(x1,"")
b=str_split(x2,"")
dist_best <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- participantPrev$Pattern[1]
a=str_split(x1,"")
b=str_split(x2,"")
dist_own <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
if(dist_own < dist_best ){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else {
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination???")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
}
} else if ( all(unique(actions) %in% c("COPY","SHOW","ITEMCHANGE")==TRUE) && length(unique(actions))==3){
others <- participantOld$SelectedPlayer
others <- others[!is.na(others)]
sols <- strategies %>%
filter(Player %in% others & Round == p-1) %>%
group_by(Player) %>% slice(1)
last <- sols$Pattern[length(sols$Pattern)]
sols$FitnessScore <- as.numeric(str_replace(sols$FitnessScore, ",", "."))
best <- sols[which.max(as.numeric(sols$FitnessScore)),]$Pattern
#distance from last persn
x1 <- participantOld$Pattern[1]
x2 <- last
a=str_split(x1,"")
b=str_split(x2,"")
dist_last <-(sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- best
a=str_split(x1,"")
b=str_split(x2,"")
dist_best <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- participantPrev$Pattern[1]
a=str_split(x1,"")
b=str_split(x2,"")
dist_own <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
if(dist_own < dist_best){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else {
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination???")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
}
} else if (all(unique(actions) %in% c("SHOW", "COPY") == TRUE) && length(unique(actions))>1){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("copy")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else if (all(actions == "SHOW")){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("individual/exploit")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else if (all(actions == "COPY") && length(unique(actions))==1){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("individual/exploit")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else{
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("unknown")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
}
}
}
colnames(strat) <- c("ID","TRIAL","STRATEGY","PAYOFF","ACTION")
write.csv(strat,file="~/Desktop/res/NEW_2.csv")
data <- read.csv("~/Desktop/exp_WAGNER1.csv",row.names=NULL,sep=';',
colClasses= c("character",
"numeric",
"character",
"character",
"character",
"character",
"numeric",
"character",
"character",
"character",
"numeric",
"character",
"character",
"character",
"character",
"numeric",
"numeric",
"numeric",
"character"))
data <- data %>% dplyr::filter(SessionGroup ==3)
strategies <- data %>%  select(Player,Round,Pattern,Action, ActionValue,SelectedPlayer,FitnessScore)
strategies$Action[strategies$Action == ""]  <- "NULL"
strategies$ActionValue[strategies$ActionValue == ""]  <- "NULL"
k=0
#recombinators <- matrix(0,ncol=7,nrow=9*9)
#r <- 3:6
strat <- matrix(0,ncol=5,nrow=9*34)
for(i in 1:9){ #player
for(p in 2:35){ #round
k=k+1
#select participant and round
participantOld <- strategies %>% filter(Player==i & Round == p)
participantOld <- participantOld[-1,]
participantOld <- participantOld[-nrow(participantOld),]
participantPrev <- strategies %>% filter(Player==i & Round == p-1)
if( (p>1) && nrow(participantOld )> 1 ){
participantOld <- participantOld[-1,]
}
actions <- participantOld$Action
if(all(actions == "ITEMCHANGE")){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("individual/explore")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else if (all(unique(actions) == c("SHOW", "ITEMCHANGE"))==TRUE && length(unique(actions))>1 ){
others <- participantOld$SelectedPlayer
others <- others[!is.na(others)]
sols <- strategies %>%
filter(Player %in% others & Round == p-1) %>%
group_by(Player) %>% slice(1)
last <- sols$Pattern[length(sols$Pattern)]
sols$FitnessScore <- as.numeric(str_replace(sols$FitnessScore, ",", "."))
best <- sols[which.max(as.numeric(sols$FitnessScore)),]$Pattern
#distance from last persn
x1 <- participantOld$Pattern[1]
x2 <- last
a=str_split(x1,"")
b=str_split(x2,"")
dist_last <-(sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- best
a=str_split(x1,"")
b=str_split(x2,"")
dist_best <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- participantPrev$Pattern[1]
a=str_split(x1,"")
b=str_split(x2,"")
dist_own <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
if(dist_own < dist_best ){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else {
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination???")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
}
} else if ( all(unique(actions) %in% c("COPY","SHOW","ITEMCHANGE")==TRUE) && length(unique(actions))==3){
others <- participantOld$SelectedPlayer
others <- others[!is.na(others)]
sols <- strategies %>%
filter(Player %in% others & Round == p-1) %>%
group_by(Player) %>% slice(1)
last <- sols$Pattern[length(sols$Pattern)]
sols$FitnessScore <- as.numeric(str_replace(sols$FitnessScore, ",", "."))
best <- sols[which.max(as.numeric(sols$FitnessScore)),]$Pattern
#distance from last persn
x1 <- participantOld$Pattern[1]
x2 <- last
a=str_split(x1,"")
b=str_split(x2,"")
dist_last <-(sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- best
a=str_split(x1,"")
b=str_split(x2,"")
dist_best <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
x1 <- participantOld$Pattern[1]
x2 <- participantPrev$Pattern[1]
a=str_split(x1,"")
b=str_split(x2,"")
dist_own <- (sum(a[[1]] != b[[1]])) / length(a[[1]])
if(dist_own < dist_best){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else {
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("recombination???")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
}
} else if (all(unique(actions) %in% c("SHOW", "COPY") == TRUE) && length(unique(actions))>1){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("copy")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else if (all(actions == "SHOW")){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("individual/exploit")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else if (all(actions == "COPY") && length(unique(actions))==1){
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("individual/exploit")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
} else{
strat[k,1:2] <- c(i,p)
strat[k,3] <- c("unknown")
strat[k,4] <- as.numeric(str_replace(participantOld$FitnessScore, ",", "."))[1]
strat[k,5] <-paste0(c(unique(actions)),sep="_",collapse  = "")
}
}
}
colnames(strat) <- c("ID","TRIAL","STRATEGY","PAYOFF","ACTION")
write.csv(strat,file="~/Desktop/res/NEW_3.csv")
warnings()
library(tidyverse)
library(here)
library(reshape)
paris <- read.csv(here("data/data_raw/paris/ParisJudgement.csv"),colClasses = c(rep("character",4),rep("numeric",11 )),header = TRUE)
#paris <- as.data.frame(paris)
paris <- paris[,-c(1,2,3)]
paris <- paris[,-1]
paris <- t(paris)
library(tidyverse)
library(here)
library(reshape)
setwd("~/GitHub/taste-influence/ls")
#jester
load(here("data/data_raw/jester/jesterFull.Rdata"))
setwd("~/GitHub/taste-influence/")
#jester
load(here("data/data_raw/jester/jesterFull.Rdata"))
here()
library(here)
here()
rm(list=ls())
library(here)
here()
library(tidyverse)
library(here)
library(reshape)
